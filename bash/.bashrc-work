# #############################################################################
# hashicorp vault secret listing
# #############################################################################
if rpm -q vault &> /dev/null; then
    export VAULT_ADDR="http://127.0.0.1:8200"
    export VAULT_TOKEN=$(cat "/usr/share/userful-vault/vault_root_token.txt")
fi

listVaultSecrets() {
    local atleastOneSecret=0
    for key in $(vault kv list --format=json secret | jq -r '.[]'); do
        printSeparator "-"
        atleastOneSecret=1

        printf "Secret: $key\n";
        printf "Value : $(vault kv get --format=json "secret/$key" | jq -c .data.data)\n";
    done

    if [ $atleastOneSecret -eq 0 ]; then
        printf "No secrets found\n"
    else
        printSeparator "-"
    fi
}
export -f listVaultSecrets


# #############################################################################
# variables for selective update or distro-sync
# #############################################################################
export FRONT_APPS="userful-chronos-emerald userful-chronos-react-app-amethyst userful-chronos-react-app-config userful-chronos-react-app-ctrlroom userful-chronos-react-app-decisions userful-chronos-react-app-launcher userful-chronos-react-app-monitoring userful-chronos-react-app-ruby userful-chronos-react-app-sapphire userful-chronos-react-app-sapphire-present userful-chronos-react-app-topaz userful-chronos-react-calibration userful-chronos-react-initial-setup userful-chronos-react-preset-switcher userful-chronos-react-user-management userful-chronos-source-destination-management userful-powerbi-client-app userful-react-app-interactive-viewer userful-sdk-doc userful-tableau-client-app userful-epic-client-app"
export BACK_APPS="userful-chronos-aether userful-chronos-ve userful-chronos-webclients userful-chronos-monitoring"


# #############################################################################
# alias for logging
# #############################################################################
alias cdlog='cd /var/log/userful'
alias reboot='rm -rf /var/log/userful/*; shutdown -r 0'

create_log_aliases() {
    local LOGVAR="$1"
    local LOGFILEPATH="$2"

    if [ -n "$LOGFILEPATH" ] && [ -f "$LOGFILEPATH" ]; then
        alias log"$LOGVAR"="vi $LOGFILEPATH"
        alias less"$LOGVAR"="less $LOGFILEPATH"
        alias cat"$LOGVAR"="cat $LOGFILEPATH"
        alias tail"$LOGVAR"="tail -f -n 0 $LOGFILEPATH"
        # alias cd"$LOGVAR"="cd $(dirname $LOGFILEPATH)"
    fi
}

create_log_aliases aether '/var/log/userful/userful-chronos-aether.log'
create_log_aliases vem '/var/log/userful/userful-chronos-ve.log'
create_log_aliases veo '/var/log/userful/veo.log'
create_log_aliases db '/var/log/userful/db_backup_and_restore.log'
create_log_aliases init '/var/log/userful/userful-chronos-initial-setup.log'
create_log_aliases plugin '/var/log/userful/profile-data.log'
create_log_aliases grafana '/var/log/grafana/grafana.log'
create_log_aliases prom '/var/log/userful/prometheus.log'
create_log_aliases kc '/var/log/userful/userful-chronos-keycloak.log'
create_log_aliases kcapp '/var/log/userful/userful-chronos-keycloak-app.log'
create_log_aliases postgres "$(ls -1t /var/lib/pgsql/data/log/*log 2>/dev/null | head -1)"


# #############################################################################
# aws configuration
# #############################################################################
export AWS_PROFILE=dev
export K8NS=carbon
alias awslogin='aws sso login --profile "${AWS_PROFILE}"'
alias gcmdeployments='kubectl --namespace "${K8NS}" get deployments'
alias gcmpods='kubectl --namespace "${K8NS}" get pods'

gcmlogs() {
    if [ -z "${1}" ]; then
        echo "Usage: gcmlogs <deployment-name> or <pod-name>"
        echo "Eg   : gcmlogs bhavyai"
        return
    fi

    if kubectl --namespace ${K8NS} get deployment "${1}" >/dev/null 2>&1; then
        kubectl --namespace ${K8NS} logs deploy/${1} -f
    else
        kubectl --namespace ${K8NS} logs ${1} -f
    fi
}
export -f gcmlogs
