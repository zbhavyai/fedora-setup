# #############################################################################
# alias for logging
# #############################################################################
alias cdlog='cd /var/log/userful/'
alias cdplugin='cd /usr/share/userful-multiseat/plugins/'
alias reboot='rm -rf /var/log/userful/*; systemctl reboot'
alias xorgErrors='ls -1t /var/log/Xorg*log | head -1 | xargs grep EE'

function create_log_aliases() {
    local LOGVAR="$1"
    local LOGFILEPATH="$2"

    if [ -n "$LOGFILEPATH" ] && [ -f "$LOGFILEPATH" ]; then
        alias log"$LOGVAR"="vi $LOGFILEPATH"
        alias less"$LOGVAR"="less $LOGFILEPATH"
        alias cat"$LOGVAR"="cat $LOGFILEPATH"
        alias tail"$LOGVAR"="tail -f -n 0 $LOGFILEPATH"
        # alias cd"$LOGVAR"="cd $(dirname $LOGFILEPATH)"
    fi
}

create_log_aliases aether '/var/log/userful/userful-chronos-aether.log'
create_log_aliases vem '/var/log/userful/userful-chronos-ve.log'
create_log_aliases veo '/var/log/userful/veo.log'
create_log_aliases db '/var/log/userful/db_backup_and_restore.log'
create_log_aliases init '/var/log/userful/userful-chronos-initial-setup.log'
create_log_aliases plugin '/var/log/userful/profile-data.log'
create_log_aliases grafana '/var/log/grafana/grafana.log'
create_log_aliases prom '/var/log/userful/prometheus.log'
create_log_aliases kc '/var/log/userful/keycloak.log'
create_log_aliases postgres "$(ls -1t /var/lib/pgsql/data/log/*log 2>/dev/null | head -1)"

# #############################################################################
# aws configuration
# #############################################################################
export AWS_PROFILE=dev
export K8NS=carbon
alias awslogin='aws sso login --profile "${AWS_PROFILE}"'
alias gcmdeployments='kubectl --namespace "${K8NS}" get deployments'
alias gcmpods='kubectl --namespace "${K8NS}" get pods'

function gcmlogs() {
    if [ -z "${1}" ]; then
        echo "Usage: gcmlogs <deployment-name> or <pod-name>"
        echo "Eg   : gcmlogs bhavyai"
        return
    fi

    if kubectl --namespace ${K8NS} get deployment "${1}" >/dev/null 2>&1; then
        kubectl --namespace ${K8NS} logs --follow --tail=0 deploy/${1}
    else
        kubectl --namespace ${K8NS} logs --follow --tail=0 ${1}
    fi
}
export -f gcmlogs
